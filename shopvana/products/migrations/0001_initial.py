# Generated by Django 4.2.21 on 2025-08-13 18:59

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.UUIDField(default=uuid.uuid4, help_text='Product category identifier', primary_key=True, serialize=False, unique=True, verbose_name='self')),
                ('name', models.CharField(help_text='Name of the category', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of the category')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the category was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the category was last updated')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'db_table': 'shopvana_category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the product', primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Name of the product', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the product')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price of the product', max_digits=10)),
                ('image', models.ImageField(blank=True, help_text='Image of the product', upload_to='products/pictures/')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the product was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the product was last updated')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Quantity of the product in stock')),
                ('is_active', models.BooleanField(default=True, help_text='Indicates if the product is active and available for sale')),
                ('category', models.ForeignKey(help_text='Category to which the product belongs', on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.category')),
            ],
            options={
                'verbose_name_plural': 'Products',
                'db_table': 'shopvana_product',
                'ordering': ['name'],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='shopvana_ca_name_bfd526_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['created_at'], name='shopvana_ca_created_c7e593_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='shopvana_pr_name_58f4c2_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['price'], name='shopvana_pr_price_5a8a1c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='shopvana_pr_created_fe907d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='shopvana_pr_categor_43849e_idx'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='price_gte_0'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('stock_quantity__gte', 0)), name='stock_quantity_gte_0'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('name', 'category')},
        ),
    ]
